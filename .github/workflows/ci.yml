name: Build and Deploy to GKE
on:
  push:
    branches: [ master ]

env:
  GKE_PROJECT: ${{ secrets.GKE_PROJECT }}
  GKE_EMAIL: ${{ secrets.GKE_EMAIL }}
  GKE_ZONE: europe-west2-c
  GKE_CLUSTER: github-action-demo

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: skaffold build
      uses: navyatejaotturu-metronom/skaffold-action@v2
      with:
        skaffold: build 
        docker_username: ${{ secrets.DOCKER_USERNAME }}
        docker_password: ${{ secrets.DOCKER_PASSWORD }}

  tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install GoLang
      uses: actions/setup-go@v2
      with:
        go-version: '1.10'
    
    - name: Install dependencies
      run: go get github.com/gorilla/mux

    - name: Run Unit Tests
      run: go test -v

  deploy:
    needs: [build, tests]
    name: Deploy
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Docker Image Tag
      run: |
          echo $GITHUB_SHA
          export IMAGE_TAG="$(echo $GITHUB_SHA | cut -c1-7)"
          echo "::set-env name=DOCKER_IMAGE_TAG::$IMAGE_TAG"

    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '270.0.0'
        service_account_email: ${{ secrets.GKE_EMAIL }}
        service_account_key: ${{ secrets.GKE_KEY }}

    - name: Configure a K8s cluster to deploy
      run: |
        gcloud container clusters list --project $GKE_PROJECT
        gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $GKE_PROJECT
        echo $HOME
        ls -la $HOME

    - name: Verify contexts
      uses: nickgronow/kubectl@master
      with:
        args: '"config get-contexts"'

    - name: skaffold deploy
      uses: navyatejaotturu-metronom/skaffold-action@v2
      with:
        skaffold: deploy --images navyateja/provider-example:${{ env.DOCKER_IMAGE_TAG }} --kubeconfig=${{ env.HOME }}/.kube/config --namespace=default
